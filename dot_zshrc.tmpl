export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/bin:$PATH
export PATH=$HOME/.roswell/bin:$PATH
export PATH=$HOME/common-lisp/lem:$PATH

export NIXPKGS_ALLOW_UNFREE=1

{{ if eq .chezmoi.os "darwin" }}
export PATH=$HOME/Library/Android/sdk/platform-tools:$PATH
{{ end }}

## Rust cargo
export PATH="$HOME/.cargo/bin:$PATH"

## Go
{{ if eq .chezmoi.os "darwin" }}
export PATH=/usr/local/bin:$HOME/go/bin:$PATH
export PATH="/usr/local/sbin:$PATH"
{{ end }}



# history settings
export HISTFILE=${HOME}/.zsh_history
export HISTSIZE=1000
export SAVEHIST=100000

setopt hist_ignore_dups
setopt hist_verify
setopt hist_reduce_blanks
setopt hist_ignore_space
setopt hist_no_store
setopt share_history
setopt EXTENDED_HISTORY
bindkey -e

if type vim >/dev/null 2>&1; then
  export EDITOR=vim
fi

# starship
if type starship >/dev/null 2>&1; then
  eval "$(starship init zsh)"
fi


# zplug
{{ if eq .chezmoi.os "linux" }}
export ZPLUG_HOME=${HOME}/.zplug
{{ else if eq .chezmoi.os "darwin" }}
{{ $arch := output "uname" "-m" }}
{{ if eq $arch "arm64\n" }}
export ZPLUG_HOME=/opt/homebrew/opt/zplug
{{ else }}
export ZPLUG_HOME=/usr/local/opt/zplug
{{ end }}
PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"
{{ end }}

source ${ZPLUG_HOME}/init.zsh

zplug "zsh-users/zsh-syntax-highlighting"
zplug "zsh-users/zsh-autosuggestions"

if ! zplug check; then
  printf "Install? [y/N]: "
  if read -q; then
    echo; zplug Install
  fi
fi
zplug load

# UI
autoload -U compinit
compinit
zstyle ':completion:*:default' menu select=1


# asdf
[ -f $HOME/.asdf/asdf.sh ] && . $HOME/.asdf/asdf.sh

# mise(æ—§rtx)
{{ if or (eq .chezmoi.os "linux") (eq .chezmoi.os "darwin") }}
eval "$($(which mise) activate zsh)"
export PATH="$HOME/.local/share/mise/shims:$PATH"
{{ end }}

# fzf select history
function fzf-select-history() {
  BUFFER=$(history -n -r 1 | fzf --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle reset-prompt
}
zle -N fzf-select-history
bindkey '^r' fzf-select-history

function select-git-switch() {
  target_br=$(
    git branch -a |
      fzf --exit-0 --layout=reverse --info=hidden --no-multi --preview-window="right,65%" --prompt="CHECKOUT BRANCH > " --preview="echo {} | tr -d ' *' | xargs git lgn --color=always" |
      head -n 1 |
      perl -pe "s/\s//g; s/\*//g; s/remotes\/origin\///g"
  )
  if [ -n "$target_br" ]; then
    BUFFER="git switch $target_br"
    zle accept-line
  fi
}
zle -N select-git-switch

# Flutter
{{ if eq .chezmoi.os "linux" }}
export ANDROID_HOME=${HOME}/Android/Sdk
export CHROME_EXECUTABLE=/usr/bin/google-chrome-stable
export PATH="$PATH":"$HOME/.pub-cache/bin"
{{ end }}

# Alias
alias port_num_filter="grep -E '^[0-9]+/' | awk -F'/' '{print $1}' | tr '\n' ',' | sed -e 's/,$//'";
alias cdrepos='cd $(ghq list -p | fzf)'
alias coderepo='code $(ghq list -p | fzf)'

# Modern CLI tools
# Check if modern tools are available and set up aliases
if command -v eza >/dev/null 2>&1; then
  alias ls='eza --color=always --group-directories-first'
  alias ll='eza -l --color=always --group-directories-first'
  alias la='eza -la --color=always --group-directories-first'
  alias lt='eza -T --color=always --group-directories-first'
  alias l.='eza -a | grep -E "^\."'
fi

if command -v bat >/dev/null 2>&1; then
  alias cat='bat --style=plain --paging=never'
  alias batl='bat --style=numbers --paging=never'
  export MANPAGER="sh -c 'col -bx | bat -l man -p'"
  export BAT_THEME="Catppuccin-mocha"
fi

if command -v fd >/dev/null 2>&1; then
  alias find='fd'
fi

if command -v delta >/dev/null 2>&1; then
  export GIT_PAGER='delta'
fi

if command -v zoxide >/dev/null 2>&1; then
  eval "$(zoxide init zsh)"
  alias cd='z'
  alias cdi='zi'
fi

if command -v dust >/dev/null 2>&1; then
  alias du='dust'
fi

if command -v procs >/dev/null 2>&1; then
  alias ps='procs'
fi

if command -v bottom >/dev/null 2>&1; then
  alias top='btm'
fi

if command -v tldr >/dev/null 2>&1; then
  alias help='tldr'
fi

# fzf with modern tools integration
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Use fd with fzf if available, otherwise fall back to rg
if command -v fd >/dev/null 2>&1; then
  export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'
else
  export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!.git"'
fi

# Catppuccin theme for fzf
export FZF_DEFAULT_OPTS="
  --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8
  --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc
  --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8
  --height 40% --reverse --border --multi --cycle
  --bind 'ctrl-a:select-all'
  --bind 'ctrl-d:deselect-all'
  --bind 'ctrl-t:toggle-all'"

# Enhanced preview with bat if available
if command -v bat >/dev/null 2>&1; then
  export FZF_CTRL_T_OPTS="--preview 'bat --color=always --style=numbers --line-range=:500 {}'"
fi

fpath=(~/.zsh/completion $fpath)
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

zle -N fzf-select-history

# Emacs
function estart() {
  if ! emacsclient -e 0 > /dev/null 2>&1; then
    cd > /dev/null 2>&1
    emacs --daemon
    cd - > /dev/null 2>&1
  fi
}

alias e='emacsclient -nw'
alias ekill="emacsclient -e '(kill-emacs)'"
alias erestart="emacsclient -e '(kill-emacs)' && estart"


#source "$(brew --prefix google-cloud-sdk)/google-cloud-sdk/path.zsh.inc"
#source "$(brew --prefix google-cloud-sdk)/google-cloud-sdk/completion.zsh.inc"

[ -f /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh ] && . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh


if [ -d $HOME/.pyenv ]; then
  export PYENV_ROOT="$HOME/.pyenv"
  [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init - bash)"
fi

